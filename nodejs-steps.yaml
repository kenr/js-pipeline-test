steps:
  - task: NodeTool@0
    inputs:
      versionSpec:  ${{ parameters['node_version'] }}
    condition: ne('${{ parameters['node_arch'] }}', '32')
    displayName: "Install Node.js ${{ parameters['node_version'] }} 64-bit"
  - bash: |
      # This script assumes that nvm for Windows is installed in C:\nvm
      # https://github.com/coreybutler/nvm-windows/releases
      set -o errexit -o pipefail
      $NVM_HOME/nvm install $NODE_VERSION $NODE_ARCH
      $NVM_HOME/nvm use $NODE_VERSION $NODE_ARCH
      echo "##vso[task.prependpath]$NVM_SYMLINK"
    env: {
      NVM_HOME: "C:\\nvm",
      NVM_SYMLINK: "C:\\nvm\\v${{ parameters['node_version'] }}",
      NODE_VERSION: "${{ parameters['node_version'] }}",
      NODE_ARCH: "${{ parameters['node_arch'] }}",
    }
    condition: and(contains(variables['Agent.OS'], 'Windows_NT'), eq('${{ parameters['node_arch'] }}', '32'))
    displayName: "Install Node.js ${{ parameters['node_version'] }} 32-bit"
    continueOnError: false
  - script: node -e "console.log(process.version+\" arch:\"+process.arch)"
    displayName: "Running node ${{ parameters['node_version'] }}/${{ parameters['node_arch'] }} tests"
    continueOnError: false
