variables:
- group: wayland
- name: VCPKG_EXPORT_FILENAME
  value: 'vcpkg-export-$(vcpkg_triplet)-$(Build.BuildNumber)'

jobs:
  - job: test_windows
    displayName: "Test Windows"
    pool:
      vmImage: vs2017-win2016
    steps:
      - task: UniversalPackages@0
        displayName: 'Download nrfjprog encrypted source code'
        inputs:
          command: download
          vstsFeed: 'Wayland internal/nrfjprog-releases'
          vstsFeedPackage: 'nrftools'
          vstsPackageVersion: '*'
          downloadDirectory: '$(Build.SourcesDirectory)/someFolder'
      - bash: |
          echo "You silly cow!" > file.txt
          openssl enc -aes-256-cbc -salt -pbkdf2 -in file.txt -out file.txt.enc -k mae7EiT8
          unzip --help
          echo "ASDF: $(Build.SourcesDirectory)"
          cygpath -u "$(Build.SourcesDirectory)"
          ls `cygpath -u "$(Build.SourcesDirectory)"`
      - bash: |
          openssl enc -aes-256-cbc -d -pbkdf2 -in file.txt.enc -out file-output.txt -k ASDF
          cat file-output.txt
      - template: 'prepare-vcpkg.yaml'
        parameters:
          TRIPLET: 'x64-linux'
          VCPKG_ROOT: "$(Build.SourcesDirectory)/vcpkg"
          ARTIFACT_DIRECTORY: "$(Build.SourcesDirectory)/temp"
      - template: 'prepare-vcpkg.yaml'
        parameters:
          TRIPLET: 'x64-osx'
          VCPKG_ROOT: "$(Build.SourcesDirectory)/vcpkg"
          ARTIFACT_DIRECTORY: "$(Build.SourcesDirectory)/temp"
      - template: 'prepare-vcpkg.yaml'
        parameters:
          TRIPLET: 'x86-windows'
          VCPKG_ROOT: "$(Build.SourcesDirectory)/vcpkg"
          ARTIFACT_DIRECTORY: "$(Build.SourcesDirectory)/temp"
      - template: 'prepare-vcpkg.yaml'
        parameters:
          TRIPLET: 'x64-windows'
          VCPKG_ROOT: "$(Build.SourcesDirectory)/vcpkg"
          ARTIFACT_DIRECTORY: "$(Build.SourcesDirectory)/temp"
